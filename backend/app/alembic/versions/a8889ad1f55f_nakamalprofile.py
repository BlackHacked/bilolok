"""NakamalProfile

Revision ID: a8889ad1f55f
Revises: 919342d262c5
Create Date: 2022-08-27 21:57:21.456263

"""
import uuid
from alembic import op
import sqlalchemy as sa
import fastapi_users_db_sqlalchemy
import sqlalchemy_utc
from sqlalchemy.dialects import postgresql
from sqlalchemy.exc import NoResultFound

# revision identifiers, used by Alembic.
revision = 'a8889ad1f55f'
down_revision = '919342d262c5'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('nakamal_profile',
    sa.Column('id', fastapi_users_db_sqlalchemy.guid.GUID(), nullable=False),
    sa.Column('created_at', sqlalchemy_utc.sqltypes.UtcDateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sqlalchemy_utc.sqltypes.UtcDateTime(timezone=True), nullable=True),
    sa.Column('nakamal_id', fastapi_users_db_sqlalchemy.guid.GUID(), nullable=False),
    sa.Column('image_id', fastapi_users_db_sqlalchemy.guid.GUID(), nullable=False),
    sa.ForeignKeyConstraint(['image_id'], ['image.id'], ),
    sa.ForeignKeyConstraint(['nakamal_id'], ['nakamal.id'], ),
    sa.PrimaryKeyConstraint('id')
    )

    conn = op.get_bind()
    # Update nakamal profile to latest image
    res = conn.execute("SELECT id FROM nakamal")
    results = res.fetchall()
    for res in results:
        img_res = conn.execute(f"SELECT image.id FROM image WHERE image.nakamal_id = '{str(res[0])}' ORDER BY created_at DESC LIMIT 1")
        result = img_res.fetchone()
        if result is not None:
            id = uuid.uuid4()
            now = sqlalchemy_utc.utcnow()
            conn.execute(f"INSERT INTO nakamal_profile(id, nakamal_id, image_id, created_at, updated_at) VALUES ('{str(id)}', '{str(res[0])}', '{str(result[0])}', {str(now)}, {str(now)})")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('nakamal_profile')
    # ### end Alembic commands ###
