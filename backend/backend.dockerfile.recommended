####
####
# This mess is was an attempt to use the recommended poetry + fastapi dockerfile boilerplate as described in the fastapi docs.
# However, this failed due to my use of git repos as source of packages which may no longer be necessary; but until I can investigate that I will just leave this here as a reminder. 
####
####


# FROM python:3.8-slim AS python-poetry-base
# # Default to the latest version of Poetry
# ARG POETRY_VERSION=""

# ENV POETRY_VERSION=${POETRY_VERSION}
# ENV POETRY_HOME="/opt/poetry"
# ENV POETRY_VIRTUALENVS_IN_PROJECT=true
# ENV POETRY_NO_INTERACTION=1
# ENV PATH="$POETRY_HOME/bin:$PATH"

# FROM python-poetry-base AS python-poetry-builder

# RUN apt-get update \
#     && apt-get install --no-install-recommends --assume-yes curl
# # This script respects $POETRY_VERSION & $POETRY_HOME
# RUN curl -sSL https://install.python-poetry.org | python3 -

# FROM python-poetry-base AS python-poetry
# COPY --from=python-poetry-builder $POETRY_HOME $POETRY_HOME

FROM python:3.8-slim as requirements-stage

WORKDIR /tmp

RUN pip install poetry

COPY ./app/pyproject.toml ./app/poetry.lock* /tmp/

RUN poetry export -f requirements.txt --output requirements.txt --without-hashes

FROM python:3.8-slim
# FROM python-poetry as app

WORKDIR /code

COPY --from=requirements-stage /tmp/requirements.txt /code/requirements.txt

RUN pip install --no-cache-dir --upgrade -r /code/requirements.txt


# Copy poetry.lock* in case it doesn't exist in the repo
# COPY ./app/pyproject.toml ./app/poetry.lock* /code

# RUN poetry install --no-root --no-dev
# TODO use new notation --only main

# Allow installing dev dependencies to run tests
# ARG INSTALL_DEV=false
# RUN bash -c "if [ $INSTALL_DEV == 'true' ] ; then poetry install --no-root ; else poetry install --no-root --no-dev ; fi"

# For development, Jupyter remote kernel, Hydrogen
# Using inside the container:
# jupyter lab --ip=0.0.0.0 --allow-root --NotebookApp.custom_display_url=http://127.0.0.1:8888
# ARG INSTALL_JUPYTER=false
# RUN bash -c "if [ $INSTALL_JUPYTER == 'true' ] ; then pip install jupyterlab ; fi"

COPY ./app /code/app

# ENV PYTHONPATH=/code

CMD ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "80"]